import React from 'react';
import Editor from '../../../dist/index'

export default (props) => {
  const value = '<p>本周前端精选文章推荐快速查看 <a href=\"https://front.yunzhu.info/week?s=1624809600000\">2021 6.28~7.03前端文章精选</a></p>\n<h4 id=\"ECMAScript-2021--ES12-通过-正式写入-ECMAScript-标准\">ECMAScript 2021 （ES12）通过，正式写入 ECMAScript 标准</h4>\n<p>2021 年 6 月 22 日，第 121 届 Ecma 国际（Ecma International）大会以远程会议形式召开。 ECMAScript 2021 （ES12）成为事实的 ECMAScript 标准，并被写入 ECMA-262 第 12 版。</p>\n<h4 id=\"-译--Chrome-92-DevTools-的新功能\">[译] Chrome 92 DevTools 的新功能</h4>\n<p>Chrome 92 DevTools 的新功能，CSS Grid编辑器是一个社区呼声很高的特性。现在你可以通过它来预览和创建 CSS Grid 布局了。</p>\n<h4 id=\"多媒体前端技术入门指南\">多媒体前端技术入门指南</h4>\n<p>随着B站、抖音、快手、淘宝直播等直播视频平台的快速崛起，前端衍生出了多媒体技术方向，各公司的传统前端团队里陆续出现了一支新军：Web多媒体团队。光看团队Title，这应该是一个拥有前端×多媒体交叉领域稀有技能的群体。阿里巴巴内部也存在众多Web多媒体团队，在内部我们针对新人整理了一份多媒体前端技术入门指南，今天将这份入门指南也对外分享出来，让大家了解我们近几年在该领域有哪些方向的工作，有哪些实践和落地，本文将从几个方面带着大家一窥究竟。</p>\n<h4 id=\"微前端--前端开发新体验\">微前端——前端开发新体验</h4>\n<p>团队在去年使用微前端架构重新构建了一个门户站点。通过引入微前端架构，解决了单体架构下、多团队协作所产生的相互影响，相互依赖的问题，使得团队更大程度的获得了自治权。本文选取业务模型，技术实践，服务资产管理三个视角，通过分析项目迭代开发存在的问题，尝试说明原有单体架构下的痛点，以及引入微前端如何解决痛点问题，从而改善各个团队工作方式。最后，我们将总结分享在对门户站点进行微前端改造过程中所汲取到的经验和教训。</p>\n<p>文章详情及更多：<a href=\"https://front.yunzhu.info/day?s=1624809600000\">2021.06.28日精选</a></p>\n<h4 id=\"5个拥有JavaScript原生SDK的云数据库\">5个拥有JavaScript原生SDK的云数据库</h4>\n<p>使用云数据库为你的应用程序打开了一套全新的功能。但是，为你的要求选择一个完美的云数据库解决方案可能比想象的要难。因此，在这篇文章中，将讨论5个针对JavaScript的云数据库解决方案，并进行功能比较，以帮助你为下一个项目选择最佳方案。</p>\n<h4 id=\"Next-js-11的新功能\">Next.js 11的新功能</h4>\n<p>在6月15日举行的2021年Next.js大会上，来自世界各地的开发者共同见证了Next.js 11的发布，这是Vercel团队的最新版本。Next.js 11中包含的更新和新功能为一个已经很受欢迎的库提供了重大改进。</p>\n<p>文章详情及更多：<a href=\"https://front.yunzhu.info/day?s=1625068800000\">2021.07.01日精选</a></p>\n<h4 id=\"抽象泄漏-Leaky-Abstractions-\">抽象泄漏（Leaky Abstractions）</h4>\n<p>拥抱抽象泄漏，并把它当作抽象层级的一部分，在制定好规范的基础上鼓励调用者填补框架的认知空白。典型例子如 webpack, eslint 等工具的插件机制。与其逼迫调用者 &quot;hack&quot; 你的抽象层，不如提供一个入口、邀请他们共建。</p>\n<h4 id=\"万字长文讲透低代码\">万字长文讲透低代码</h4>\n<p>要判断一个低代码平台是否专业，可以重点看模型驱动、可视化开发、表达式语言、软件工程、开放集成和脚本语言等六个方面。</p>\n<h4 id=\"前端页面双向滚动方案\">前端页面双向滚动方案</h4>\n<p>在许多业务场景中会遇到让一个页面在web端可以实现双向滚动，且在滚动的时候可以上部吸顶，左侧吸在最左边这中类似excel表现的述求。 但是excel移动端本身使用canvas来画的，所以能保持较好的体验和性能，那么脱离canvas，我们是否有别的方案可以去靠近实现呢？如何在移动端实现，并同时兼容安卓和ios系统？</p>\n<h4 id=\"Vite-特性和部分源码解析\">Vite 特性和部分源码解析</h4>\n<p>文章详情：<a href=\"https://front.yunzhu.info/day?s=1625155200000\">2021.07.02日精选</a></p>\n'
  return (
    <div>
      <Editor 
        value={value} 
        placeholder="请输入markdown..."
      />
    </div>
  )
}